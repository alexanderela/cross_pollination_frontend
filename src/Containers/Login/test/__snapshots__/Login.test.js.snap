// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login should render like the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Login
    fetchUser={[MockFunction]}
    loading="true"
    user={
      Object {
        "email": "alex@turing.com",
        "id": 2,
        "loggedIn": true,
        "name": "rtg",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="login-background-color"
      >
        <h1
          className="login-title"
        >
          World
          <br />
          Of Flags
        </h1>
        <div
          className="login-divider"
        >
          <div
            className="divider"
          />
          <div
            className="login-divider-text"
          >
            login / sign up
          </div>
          <div
            className="divider"
          />
        </div>
        <div
          className="login-button-facebook"
        >
          Facebook
        </div>
        <div
          className="login-button-twitter"
        >
          Twitter
        </div>
        <div
          className="login-button-email"
          onClick={[Function]}
        >
          Email
        </div>
      </div>,
      "className": "Login",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1
            className="login-title"
          >
            World
            <br />
            Of Flags
          </h1>,
          <div
            className="login-divider"
          >
            <div
              className="divider"
            />
            <div
              className="login-divider-text"
            >
              login / sign up
            </div>
            <div
              className="divider"
            />
          </div>,
          <div
            className="login-button-facebook"
          >
            Facebook
          </div>,
          <div
            className="login-button-twitter"
          >
            Twitter
          </div>,
          <div
            className="login-button-email"
            onClick={[Function]}
          >
            Email
          </div>,
          false,
        ],
        "className": "login-background-color",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "World",
              <br />,
              "Of Flags",
            ],
            "className": "login-title",
          },
          "ref": null,
          "rendered": Array [
            "World",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            "Of Flags",
          ],
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="divider"
              />,
              <div
                className="login-divider-text"
              >
                login / sign up
              </div>,
              <div
                className="divider"
              />,
            ],
            "className": "login-divider",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "divider",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "login / sign up",
                "className": "login-divider-text",
              },
              "ref": null,
              "rendered": "login / sign up",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "divider",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Facebook",
            "className": "login-button-facebook",
          },
          "ref": null,
          "rendered": "Facebook",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Twitter",
            "className": "login-button-twitter",
          },
          "ref": null,
          "rendered": "Twitter",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Email",
            "className": "login-button-email",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Email",
          "type": "div",
        },
        false,
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="login-background-color"
        >
          <h1
            className="login-title"
          >
            World
            <br />
            Of Flags
          </h1>
          <div
            className="login-divider"
          >
            <div
              className="divider"
            />
            <div
              className="login-divider-text"
            >
              login / sign up
            </div>
            <div
              className="divider"
            />
          </div>
          <div
            className="login-button-facebook"
          >
            Facebook
          </div>
          <div
            className="login-button-twitter"
          >
            Twitter
          </div>
          <div
            className="login-button-email"
            onClick={[Function]}
          >
            Email
          </div>
        </div>,
        "className": "Login",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1
              className="login-title"
            >
              World
              <br />
              Of Flags
            </h1>,
            <div
              className="login-divider"
            >
              <div
                className="divider"
              />
              <div
                className="login-divider-text"
              >
                login / sign up
              </div>
              <div
                className="divider"
              />
            </div>,
            <div
              className="login-button-facebook"
            >
              Facebook
            </div>,
            <div
              className="login-button-twitter"
            >
              Twitter
            </div>,
            <div
              className="login-button-email"
              onClick={[Function]}
            >
              Email
            </div>,
            false,
          ],
          "className": "login-background-color",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "World",
                <br />,
                "Of Flags",
              ],
              "className": "login-title",
            },
            "ref": null,
            "rendered": Array [
              "World",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              "Of Flags",
            ],
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="divider"
                />,
                <div
                  className="login-divider-text"
                >
                  login / sign up
                </div>,
                <div
                  className="divider"
                />,
              ],
              "className": "login-divider",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "divider",
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "login / sign up",
                  "className": "login-divider-text",
                },
                "ref": null,
                "rendered": "login / sign up",
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "divider",
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Facebook",
              "className": "login-button-facebook",
            },
            "ref": null,
            "rendered": "Facebook",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Twitter",
              "className": "login-button-twitter",
            },
            "ref": null,
            "rendered": "Twitter",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Email",
              "className": "login-button-email",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Email",
            "type": "div",
          },
          false,
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
